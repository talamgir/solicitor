<%= content_for :extra_js do %>
  <%= javascript_include_tag "audiodisplay", "main", "recorder", "recorderWorker" %>

<script language="JavaScript" type="text/javascript">

var sec = 0;
var min = 0;
var hour = 0;
function stopwatch(text) {
   sec++;
  if (sec == 60) {
   sec = 0;
   min = min + 1; }
  else {
   min = min; }
  if (min == 60) {
   min = 0; 
   hour += 1; }

if (sec<=9) { sec = "0" + sec; }
   document.clock.stwa.value = ((hour<=9) ? "0"+hour : hour) + " : " + ((min<=9) ? "0" + min : min) + " : " + sec;

  if (text == "Start") { document.clock.theButton.value = "Stop "; }
  if (text == "Stop ") { document.clock.theButton.value = "Start"; }

  if (document.clock.theButton.value == "Start") {
   window.clearTimeout(SD);
   return true; }
SD=window.setTimeout("stopwatch();", 1000);
}

function resetIt() {
  sec = -1;
  min = 0;
  hour = 0;
  if (document.clock.theButton.value == "Stop ") {
  document.clock.theButton.value = "Start"; }
  window.clearTimeout(SD);
 }

</script>

<title>Audio Recorder</title>
<style>
  body { 
    font: 14pt Arial, sans-serif; 
    background: lightgrey;
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100%;
    margin: 0 0;
  }
  canvas { 
    display: inline-block; 
    background: #202020; 
    width: 95%;
    height: 45%;
    box-shadow: 0px 0px 10px blue;
  }
  #controls {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    height: 20%;
    width: 100%;
  }
  #record { height: 15vh; }
  #record.recording { 
    background: red;
    background: -webkit-radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%); 
    background: -moz-radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%); 
    background: radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%); 
  }
  #save, #save img { height: 10vh; }
  #save { opacity: 0.25;}
  #save[download] { opacity: 1;}
  #viz {
    height: 80%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
  }
  @media (orientation: landscape) {
    body { flex-direction: row;}
    #controls { flex-direction: column; height: 100%; width: 10%;}
    #viz { height: 100%; width: 90%;}
  }
</style>



<body cz-shortcut-listen="true">
  <div id="viz">
    <canvas id="analyser" width="1024" height="500"></canvas>
    <canvas id="wavedisplay" width="1024" height="500"></canvas>
  </div>
  <div id="controls">
   <!--  <img id="record" src="mic128.png" onclick="toggleRecording(this);"> -->
   <%= image_tag "mic128.png", :onClick => "toggleRecording(this);", id: "record"%>
   <a id="save" href="#">
    
    <%= image_tag "save.svg", id: "save" %>
    </a>
  </div>

<table bgcolor="#c0c0c0" align="center" border="0" width="140" cellspacing="0">
  <tr>
     <td align="center">
       <font face="verdana, arial, helvetica, sans-serif" size="2">
       <b>STOPWATCH</b></font>
     </td>
  </tr>
  <tr>
     <td align="center">
       <form name="clock">
       <input type="text" size="12" name="stwa" value="00 : 00 : 00" style="text-align:center" /><br />
       <input type="button" name="theButton" onClick="stopwatch(this.value);" value="Start" />
       <input type="button" value="Reset" onClick="resetIt();reset();" />
       </form>
     </td>
  </tr>     
</table>

</body>

<% end %>